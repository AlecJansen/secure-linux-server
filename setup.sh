#!/bin/bash

# setup.sh - Secure Linux Server Setup Script

set -e

echo "[*] Updating system..."
sudo apt update && sudo apt upgrade -y

echo "[*] Installing core tools..."
sudo apt install -y ufw fail2ban lynis rkhunter clamav chkrootkit unattended-upgrades mailutils msmtp

echo "[*] Enabling UFW and setting basic rules..."
sudo ufw default deny incoming
sudo ufw default allow outgoing
sudo ufw allow ssh
sudo ufw enable

echo "[*] Enabling and starting Fail2Ban..."
sudo systemctl enable fail2ban
sudo systemctl start fail2ban

echo "[*] Copying fail2ban jail.local config..."
sudo cp fail2ban/jail.local /etc/fail2ban/jail.local

echo "[*] Restarting fail2ban service..."
sudo systemctl restart fail2ban

echo "[*] Updating rkhunter file properties database (first time only)..."
sudo rkhunter --propupd -q

echo "[*] Updating ClamAV database..."
sudo freshclam

echo "[*] Creating log directory..."
mkdir -p "$HOME/secure-linux-server/logs"

echo "[*] Setting script permissions..."
chmod +x "$HOME/secure-linux-server/alerts/scripts/notify.sh"

# --- Interactive Kernel Module Hardening ---
echo
echo "[*] Harden your system by disabling risky or unused kernel modules."
echo "    For each option, type y (yes) to disable or n (no) to leave it enabled."
echo

MODULE_OPTIONS=(
  "usb-storage|Disables USB thumb drives and storage devices"
  "bluetooth|Blocks Bluetooth kernel support"
  "cramfs|Old compressed filesystem, rarely used"
  "freevxfs|Legacy Veritas filesystem"
  "jffs2|Used in embedded flash, not desktop/server"
  "hfs|Old Mac filesystem"
  "hfsplus|Newer Mac filesystem, still not used in Linux"
  "squashfs|Readonly compressed filesystem, sometimes abused"
  "udf|DVD filesystem, not often needed"
  "dccp|Experimental transport protocol with known issues"
  "sctp|Rare protocol used in telecom, potential risk"
  "rds|Infiniband/Oracle cluster protocol, uncommon"
  "tipc|Inter-process networking protocol, not widely used"
)

BLACKLIST_FILE="/etc/modprobe.d/hardened-blacklist.conf"
echo "# Kernel module blacklist generated by setup.sh" | sudo tee "$BLACKLIST_FILE" > /dev/null

for entry in "${MODULE_OPTIONS[@]}"; do
  MODULE="${entry%%|*}"
  DESC="${entry#*|}"

  while true; do
    read -p "Disable ${MODULE}? (y/n) [$DESC]: " yn
    case $yn in
      [Yy]* )
        echo "install $MODULE /bin/true" | sudo tee -a "$BLACKLIST_FILE" > /dev/null
        break;;
      [Nn]* )
        echo "Skipped $MODULE"
        break;;
      * ) echo "Please answer yes (y) or no (n).";;
    esac
  done
done

echo "[✓] Kernel module blacklist saved to $BLACKLIST_FILE"

echo
echo "[✓] Setup complete. You can now run the scan and alert system with:"
echo "     ./alerts/scripts/notify.sh"
